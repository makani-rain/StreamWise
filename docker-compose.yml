services:
  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB:       "streamwise"
    volumes:
      - ./sql/init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./sql/data.sql:/docker-entrypoint-initdb.d/2-data.sql
      - ./sql/subscripts/:/docker-entrypoint-initdb.d/subscripts/
      - pgdata:/var/lib/postgresql/data/
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  configserver:
    image: price.streamwise/configserver:0.0.1-SNAPSHOT
    ports:
       - "8089:8089"
    environment:
      # SPRING_CLOUD_CONFIG_SERVER_GIT_URI: "https://github.com/makani-rain/StreamWise.git"
      # SPRING_CLOUD_BOOTSTRAP_ENABLED: "true"
      SPRING_PROFILES_ACTIVE: git
      SERVER_PORT: "8089"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8089/actuator/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      backend:
        aliases:
          - "configserver"
  catalogservice:
    image: price.streamwise/catalog-service:0.0.1-SNAPSHOT
    environment:
      SPRING_CLOUD_BOOTSTRAP_ENABLED: "true"
      SPRING_PROFILES_ACTIVE: "dev"
      SERVER_PORT: "8080"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - backend
  consumerservice:
    image: price.streamwise/consumer-service:0.0.1-SNAPSHOT
    environment:
      SPRING_CLOUD_BOOTSTRAP_ENABLED: "true"
      SPRING_PROFILES_ACTIVE: "dev"
      SERVER_PORT: "8081"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_healthy
    ports:
      - "8081:8081"
    networks:
      - backend

volumes:
  pgdata:
    name: pgdata

networks:
  backend:
    driver: bridge